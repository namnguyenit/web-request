<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>StuHack Receiver</title>
  <style>
    body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; margin: 0; padding: 0; background: #0d1117; color: #c9d1d9; }
    header { display: flex; gap: 12px; align-items: center; justify-content: space-between; padding: 12px 16px; border-bottom: 1px solid #30363d; background: #161b22; position: sticky; top: 0; z-index: 1; }
    h1 { font-size: 18px; margin: 0; font-weight: 600; color: #e6edf3; }
    .wrap { padding: 16px; max-width: 1600px; width: 96vw; margin: 0 auto; }
  .grid { display: grid; grid-template-columns: 1fr; gap: 20px; }
    .card { background: #0f141b; border: 1px solid #30363d; border-radius: 6px; overflow: hidden; }
  .card h2 { display: flex; align-items: center; justify-content: space-between; margin: 0; padding: 10px 12px; font-size: 15px; background: #161b22; border-bottom: 1px solid #30363d; font-weight: 600; color: #e6edf3; }
  .card-body { padding: 8px 10px; }
  .collapse-btn { font-size: 12px; padding: 4px 8px; }
    table { width: 100%; border-collapse: collapse; font-size: 13px; }
    th, td { text-align: left; padding: 8px 10px; border-bottom: 1px solid #21262d; vertical-align: top; }
    th { background: #0d1117; font-weight: 600; color: #9eb1c9; }
  code, pre { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; white-space: pre-wrap; word-break: break-word; color: #e6edf3; }
    pre { margin: 6px 0; }
  /* Make long inline code (URLs/hosts) wrap nicely without per-character stacking */
  table td > div > code { white-space: normal; overflow-wrap: anywhere; word-break: break-word; }
  pre code { white-space: pre-wrap; }
    .muted { color: #8b949e; }
    .tag { background: #30363d; color: #c9d1d9; padding: 2px 6px; border-radius: 4px; font-size: 12px; border: 1px solid #21262d; display: inline-block; }
    .btn { background: #21262d; color: #c9d1d9; padding: 6px 10px; border: 1px solid #30363d; border-radius: 4px; cursor: pointer; }
    .btn:hover { background: #30363d; }
    .btn.primary { background: #2f81f7; color: #fff; border-color: #2f81f7; }
    .btn.secondary { background: #21262d; }
    .row-actions { display: flex; gap: 8px; align-items: center; margin: 6px 0; }
    .ip { color: #7ee787; font-weight: 600; }
    details summary { cursor: pointer; }
    @media (max-width: 1200px) {
      .grid { grid-template-columns: 1fr; }
    }
  </style>
  <script>
    async function clearData(){
      await fetch('/_clear', { method: 'POST' });
      location.reload();
    }

    async function copyText(text) {
      try {
        await navigator.clipboard.writeText(text);
        alert('Copied to clipboard');
      } catch (e) {
        // Fallback: create temp textarea
        const ta = document.createElement('textarea');
        ta.value = text;
        document.body.appendChild(ta);
        ta.select();
        try { document.execCommand('copy'); alert('Copied to clipboard'); } catch (e2) { alert('Copy failed'); }
        document.body.removeChild(ta);
      }
    }

    function copySiblingCookies(btn) {
      try {
        const details = btn.closest('details');
        const pre = details && details.querySelector('pre');
        const text = pre ? pre.innerText : '';
        if (text) copyText(text);
        else alert('No cookies to copy');
      } catch (e) {
        alert('Copy failed');
      }
    }

    async function deleteRow(type, id) {
      if (!confirm('Delete this entry?')) return;
      const res = await fetch(`/${type}/${id}`, { method: 'DELETE' });
      if (res.ok) location.reload();
      else alert('Delete failed');
    }

    function toggleCard(btn) {
      const card = btn.closest('.card');
      const body = card.querySelector('.card-body');
      const collapsed = body.style.display === 'none';
      body.style.display = collapsed ? '' : 'none';
      btn.textContent = collapsed ? 'Collapse' : 'Expand';
    }
  </script>
  </head>
<body>
  <header>
    <h1>StuHack Receiver</h1>
    <div style="display:flex; gap:8px; align-items:center;">
      <button class="btn" onclick="clearData()">Clear</button>
      <span class="muted">Open: <code>http://localhost:3000</code></span>
    </div>
  </header>
  <div class="wrap">
    <div class="grid">
      <section class="card">
        <h2>
          <span>POST /page <span class="muted">(latest first)</span></span>
          <button class="btn collapse-btn" onclick="toggleCard(this)">Collapse</button>
        </h2>
        <div class="card-body">
        <table>
          <thead>
            <tr>
              <th style="width: 80px;">ID</th>
              <th style="width: 170px;">Time</th>
              <th>URL</th>
              <th style="width: 140px;">Sender IP</th>
              <th>Tag</th>
              <th style="width: 90px;">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (page.length === 0) { %>
              <tr><td colspan="6" class="muted">No /page payloads yet</td></tr>
            <% } %>
            <% page.forEach(p => { %>
              <tr>
                <td><%= p.id || '-' %></td>
                <td><%= dayjs(p.ts).tz('Asia/Ho_Chi_Minh').format('YYYY-MM-DD HH:mm:ss') %></td>
                <td>
                  <div><code><%= p.url %></code></div>
                  <details>
                    <summary class="muted">cookies</summary>
                    <div class="row-actions">
                      <button class="btn secondary" onclick="copySiblingCookies(this)">Copy</button>
                    </div>
                    <pre><code><%= p.cookies %></code></pre>
                  </details>
                </td>
                <td><span class="ip"><%= p.ip || '-' %></span></td>
                <td><span class="tag"><%= p.tag %></span></td>
                <td>
                  <button class="btn secondary" data-type="page" data-id="<%= p.id %>" onclick="deleteRow(this.dataset.type, Number(this.dataset.id))">Delete</button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
        </div>
      </section>

      <section class="card">
        <h2>
          <span>POST /all <span class="muted">(latest first)</span></span>
          <button class="btn collapse-btn" onclick="toggleCard(this)">Collapse</button>
        </h2>
        <div class="card-body">
        <table>
          <thead>
            <tr>
              <th style="width: 80px;">ID</th>
              <th style="width: 170px;">Time</th>
              <th>Host</th>
              <th style="width: 140px;">Sender IP</th>
              <th>Tag</th>
              <th style="width: 90px;">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (all.length === 0) { %>
              <tr><td colspan="6" class="muted">No /all payloads yet</td></tr>
            <% } %>
            <% all.forEach(a => { %>
              <tr>
                <td><%= a.id || '-' %></td>
                <td><%= dayjs(a.ts).tz('Asia/Ho_Chi_Minh').format('YYYY-MM-DD HH:mm:ss') %></td>
                <td>
                  <div><code><%= a.host %></code></div>
                  <details>
                    <summary class="muted">cookies</summary>
                    <div class="row-actions">
                      <button class="btn secondary" onclick="copySiblingCookies(this)">Copy</button>
                    </div>
                    <pre><code><%= a.cookies %></code></pre>
                  </details>
                </td>
                <td><span class="ip"><%= a.ip || '-' %></span></td>
                <td><span class="tag"><%= a.tag %></span></td>
                <td>
                  <button class="btn secondary" data-type="all" data-id="<%= a.id %>" onclick="deleteRow(this.dataset.type, Number(this.dataset.id))">Delete</button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
        </div>
      </section>
    </div>
  </div>
</body>
</html>
